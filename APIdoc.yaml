swagger: "2.0"
info:
  title: Sintef Digital Board Game API documentation
  description: This is the API documentation for the sintef digital board game server
  version: 0.1.0
host: example.com
basePath: /api/v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

paths:
  /gameState:
    get:
      summary: Retrieves the current state of the game
      description: Returns the current state of the game stored on the server side
      produces:
        - application/json
      responses:
        200:
          description: The current gamestate
          schema:
            type: array
            items:
              type: object
              properties:
                playerTurn:
                  type: integer
                  description: Determines whose turn it is
                players:
                  type: array
                  description: Contains the data of every player connected to the session
                  items:
                    type: object
                    description: Player data
                    properties:
                      displayName:
                        type: string
                        description: Name of the player as it shows up in-game
                      colour:
                        type: array
                        description: The player's colour in RGB format
                        items:
                          type: integer
                          minimum: 0
                          maximum: 255
                        minItems: 3
                        maxItems: 3
        401:
          description: If a player outside of the game session requests a gamestate, the server will return a 401 (Unauthorized)
          schema:
            type: array
            items:
              type: object
              properties:
                errorMessage:
                  type: string
                  description: Error message which the client receives when attempting to access to access the gamestate of a game the client is not connected to
    post:
      summary: Updates the state of the game
      description: "**After a valid move has been made by the player**, the server receives an updated gamestate from the players client"
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          description: The updated gamestate (or move)
          schema:
            type: object
            properties:
              move:
                type: string
                description: Move executed
              other inputs?:
                type: string
                description: Anything else that is relevant as input data
          required: true
      responses:
        200:
          description: The updated gamestate
          schema:
            type: array
            items:
              type: object
              properties:
                playerTurn:
                  type: integer
                  description: Determines whose turn it is
                players:
                  type: array
                  description: Contains the data of every player connected to the session
                  items:
                    type: object
                    description: Player data
                    properties:
                      displayName:
                        type: string
                        description: Name of the player as it shows up in-game
                      colour:
                        type: array
                        description: The player's colour in RGB format
                        items:
                          type: integer
                          minimum: 0
                          maximum: 255
                        minItems: 3
                        maxItems: 3
        400:
          description: If the POST body is invalid, the server will throw a 400 (Bad Request)
          schema:
            type: array
            items:
              type: object
              properties:
                errorMessage:
                  type: string
                  description: Error message received by the client upon a bad request (may contain error code or some form of error catching)
        401:
          description: If a player outside of the game session posts a gamestate update, the server will return a 401 (Unauthorized)
          schema:
            type: array
            items:
              type: object
              properties:
                errorMessage:
                  type: string
                  description: Error message which the client receives when attempting to access to access the gamestate of a game the client is not connected to
